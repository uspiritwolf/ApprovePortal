// <auto-generated />
using System;
using ApprovePortal.Server.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApprovePortal.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("ApprovePortal.Server.Models.ApprovalApproverModel", b =>
                {
                    b.Property<Guid>("ApprovalId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("ApprovalId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("ApprovalApprovers");
                });

            modelBuilder.Entity("ApprovePortal.Server.Models.ApprovalModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.ToTable("Approvals");
                });

            modelBuilder.Entity("ApprovePortal.Server.Models.ApprovalTemplateModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("ApproverIds")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("ApprovePortal.Server.Models.UserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Roles")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4c1f2876-150a-4f13-94f5-cd3d2d9ce3b9"),
                            Email = "admin@gmail.com",
                            Name = "Administrator",
                            PasswordHash = "c1c224b03cd9bc7b6a86d77f5dace40191766c485cd55dc48caf9ac873335d6f",
                            Roles = 6,
                            Username = "Admin"
                        },
                        new
                        {
                            Id = new Guid("6c6570fd-f125-477d-9c47-2ee19f995d35"),
                            Email = "oleksii.chernykh@gmail.com",
                            Name = "Oleksii Chernykh",
                            PasswordHash = "27a534a25cf745b6c985eb782079a6fe8641b00003dada14f392a2d01b9c790a",
                            Roles = 2,
                            Username = "User1"
                        },
                        new
                        {
                            Id = new Guid("d986bc44-a453-41f5-a469-5bf4737ea25f"),
                            Email = "o.yashina@khai.edu",
                            Name = "Olena Yashina",
                            PasswordHash = "0e238ae88aef5a81ba9d297b5df67e74af15d168e5b765db22227c91b8672285",
                            Roles = 2,
                            Username = "User2"
                        });
                });

            modelBuilder.Entity("ApprovePortal.Server.Models.ApprovalApproverModel", b =>
                {
                    b.HasOne("ApprovePortal.Server.Models.ApprovalModel", "Approval")
                        .WithMany("Approvers")
                        .HasForeignKey("ApprovalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApprovePortal.Server.Models.UserModel", "User")
                        .WithMany("Approvals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Approval");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ApprovePortal.Server.Models.ApprovalModel", b =>
                {
                    b.HasOne("ApprovePortal.Server.Models.UserModel", "CreatedBy")
                        .WithMany("MyApprovals")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("ApprovePortal.Server.Models.ApprovalTemplateModel", b =>
                {
                    b.HasOne("ApprovePortal.Server.Models.UserModel", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("ApprovePortal.Server.Models.ApprovalModel", b =>
                {
                    b.Navigation("Approvers");
                });

            modelBuilder.Entity("ApprovePortal.Server.Models.UserModel", b =>
                {
                    b.Navigation("Approvals");

                    b.Navigation("MyApprovals");
                });
#pragma warning restore 612, 618
        }
    }
}
